// LOGO
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

// SEARCH
.search {
  align-items: center;
  display: flex; // flexitems can also be flexboxes.
  flex: 0 0 40%;
  justify-content: center;

  @media only screen and (max-width: $bp-smallest) {
    background-color: var(--color-grey-light-2);
    flex: 0 0 100%;
    order: 1; // like z-index but for html flow.
  }

  &__input {
    background-color: var(--color-grey-light-2);
    border: 0;
    border-radius: 100px; // high numer for rounded edges.
    color: inherit;
    font-family: inherit;
    font-size: inherit; // no inherited on input as default.
    margin-right: -3.25rem; // space for the icon inside the input.
    padding: .7rem 2rem;
    transition: width .2s, background-color .2s;
    width: 90%;

    &:focus {
      background-color: var(--color-grey-light-3);
      outline: none;
      width: 100%;

      @media only screen and (max-width: $bp-smallest) {
        background-color: var(--color-grey-light-2);
        width: 90%;
      }
    }

    &::-webkit-input-placeholder {
      // input text
      color: var(--color-grey-light-4);
      font-weight: 100;
    }
  }

  &__input:focus+&__button {
    // sibling selector
    background-color: var(--color-grey-light-3);
  }

  &__button {
    background-color: var(--color-grey-light-2);
    border: 0;

    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px); // click down button effect.
    }
  }

  &__icon {
    fill: var(--color-grey-dark-3); // fill instead of color for SVGs.
    height: 2rem; // SVG icons can be easily resized with height and width.
    width: 2rem;
  }
}

// USER NAVIGATION
.user-nav {
  align-items: center;
  align-self: stretch; // fills the entire height.
  display: flex;

  &>* {
    // all direct children.
    align-items: center;
    cursor: pointer;
    display: flex;
    height: 100%;
    padding: 0 2rem;

    &:hover {
      background-color: var(--color-grey-light-2);
    }
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    fill: var(--color-grey-dark-2);
    height: 2.25rem;
    width: 2.25rem;
  }

  &__notification {
    align-items: center;
    background-color: var(--color-primary);
    border-radius: 50%;
    color: var(--color-white);
    display: flex;
    font-size: .8rem;
    height: 1.75rem;
    justify-content: center;
    position: absolute;
    right: 1rem;
    top: 1.5rem;
    width: 1.75rem;
  }

  &__user-photo {
    border-radius: 50%;
    height: 3.75rem;
    margin-right: 1rem;
  }
}

// SIDEBAR NAVIGATION
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  @media only screen and (max-width: $bp-medium) {
    display: flex;
    margin-top: 0;
  }

  &__item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: .5rem;

      @media only screen and (max-width: $bp-medium) {
        margin-bottom: 0;
      }
    }

    @media only screen and (max-width: $bp-medium) {
      flex: 1;
    }

    &::before {
      background-color: var(--color-primary);
      content: '';
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      transform: scaleY(0);
      transition: transform .2s, width .4s cubic-bezier(1, 0, 0, 1) .2s, background-color .1s; // second value is delay.
      width: 3px;
    }
  }

  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1);
    width: 100%; // works even though both px and % are used.
  }

  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link {

    &:link,
    &:visited {
      align-items: center;
      color: var(--color-grey-light-1);
      display: flex; // really is flex AND block.
      padding: 1.5rem 3rem;
      position: relative; // z-index needs specified position!
      text-decoration: none;
      text-transform: uppercase;
      z-index: 10;

      @media only screen and (max-width: $bp-medium) {
        justify-content: center;
        padding: 2rem;
      }

      @media only screen and (max-width: $bp-small) {
        flex-direction: column;
        padding: 1.5rem .5rem;
      }
    }
  }

  &__icon {
    fill: currentColor; // uses the color of the element, or parent element if no color is defined for the element, side-nav__link in this case. Works with pseudoelements and the like.
    height: 1.75rem;
    margin-right: 2rem;
    width: 1.75rem;

    @media only screen and (max-width: $bp-small) {
      height: 1.5rem;
      margin-bottom: .7rem;
      margin-right: 0;
      width: 1.5rem;
    }
  }
}

// LEGAL TEXT
.legal {
  color: var(--color-grey-light-4);
  font-size: 1.2rem;
  padding: 2.5rem;
  text-align: center;

  @media only screen and (max-width: $bp-medium) {
    display: none;
  }
}

// GALLERY
.gallery {
  display: flex;

  &__photo {
    display: block;
    width: 100%; // 100% of availible flexbox item width.
  }
}

// BUTTONS
.btn {
  background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
  border: 0;
  border-radius: 100px;
  color: var(--color-white);
  cursor: pointer;
  font-size: 1.5rem;
  font-weight: 300;
  overflow: hidden; // needed to hide the invisible text of the btn.
  position: relative;
  text-transform: uppercase;

  @media only screen and (max-width: $bp-smallest) {
    font-size: 1.2rem;
  }

  &>* {
    display: inline-block;
    height: 100%;
    width: 100%;
  }

  &__visible {
    padding: 2rem 7.5rem; // padding determines size of button.
    transition: transform .2s;

    @media only screen and (max-width: $bp-medium) {
      padding: 1.5rem 5rem;
    }

    @media only screen and (max-width: $bp-smallest) {
      padding: 1rem 4rem;
    }
  }

  &__invisible {
    left: 0;
    padding: 2rem 0; // bigger text needs more space to fit withing the same size button.
    position: absolute;
    top: -100%;
    transition: top .2s;

    @media only screen and (max-width: $bp-medium) {
      padding: 1.5rem 0;
    }

    @media only screen and (max-width: $bp-smallest) {
      padding: 1rem 0;
    }
  }

  &:hover {
    background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
  }

  &:hover &__visible {
    transform: translateY(100%);
  }

  &:hover &__invisible {
    top: 0; // moves the invis text inside the button.
  }

  &:focus {
    animation: pulsate 1s infinite;
    outline: 0;
  }
}

.btn-inline {
  background-color: transparent;
  border: 0;
  border-bottom: 1px solid currentColor; // dynamic color change on :hover.
  color: var(--color-primary);
  cursor: pointer;
  display: inline-block;
  font-size: inherit; // allows dynamic resuable font size.
  padding-bottom: 2px;
  transition: color .2s;

  & span {
    margin-left: 3px;
    transition: margin-left .2s;
  }

  &:hover {
    color: var(--color-grey-dark-1);

    span {
      margin-left: 8px;
    }
  }

  &:focus {
    animation: pulsate 1s infinite;
    outline: none;
  }
}

@keyframes pulsate {
  0% {
    box-shadow: none;
    transform: scale(1);
  }

  50% {
    box-shadow: var(--shadow-medium);
    transform: scale(1.05);
  }

  100% {
    box-shadow: none;
    transform: scale(1);
  }
}

// GALLERY OVERVIEW
.overview {
  align-items: center;
  border-bottom: var(--line);
  display: flex;

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;
    text-transform: uppercase;

    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
      padding: 1.25rem 2rem;
    }
  }

  &__stars {
    display: flex; // to center stars (they behave as inline by default).
    margin-right: auto; // in flex, automatically takes all avaible space as margin.
  }

  &__icon-star,
  &__icon-pin {
    fill: var(--color-primary);
    height: 1.75rem;
    width: 1.75rem;
  }

  &__location {
    display: flex;
    font-size: 1.2rem;
    vertical-align: center;
  }

  &__icon-pin {
    margin-right: .5rem;
  }

  &__rating {
    align-items: center;
    align-self: stretch;
    background-color: var(--color-primary);
    color: var(--color-white);
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin-left: 3rem;
    padding: 0 2.25rem;

    @media only screen and (max-width: $bp-small) {
      padding: 0 1.5rem;
    }
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -.3rem; // simple way to move the flex item.

    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
    }
  }

  &__rating-count {
    font-size: .8rem;
    text-transform: uppercase;

    @media only screen and (max-width: $bp-small) {
      font-size: .6rem;
    }
  }
}

// PARAGRAPH
.paragraph:not(:last-of-type) {
  margin-bottom: 2rem;
}

// LIST
.list {
  border-bottom: var(--line);
  border-top: var(--line);
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0 2.3rem;

  &__item {
    flex: 0 0 50%;
    margin-bottom: .7rem;

    &::before {
      // Older browsers
      background-image: url('../img/chevron-thin-right.svg');
      background-size: cover;
      // All browsers
      content: '';
      display: inline-block;
      height: 1rem;
      margin-right: .7rem;
      width: 1rem;

      // Newer browsers
      @supports (mask-image: url()) {
        background-color: var(--color-primary);
        background-image: none;
        mask-image: url('../img/chevron-thin-right.svg'); // only shows the background through the mask.
        mask-size: cover;
      }
    }
  }
}

// RECOMMEND
.recommend {
  align-items: center;
  color: var(--color-grey-dark-3);
  display: flex;
  font-size: 1.3rem;

  &__count {
    margin-right: auto;
  }

  &__friends {
    display: flex;
  }

  &__photo {
    border: 3px solid var(--color-white);
    border-radius: 50%;
    box-sizing: content-box; // overrides the base border box default.
    height: 4rem;
    width: 4rem;

    &:not(:last-child) {
      margin-right: -2rem;
    }
  }
}

// REVIEWS
.review {
  background-color: var(--color-white);
  box-shadow: var(--shadow-light);
  margin-bottom: 3rem;
  overflow: hidden;
  padding: 3.5rem;
  position: relative;

  @media only screen and (max-width: $bp-medium) {
    margin-bottom: 2.5rem;
    padding: 2rem;
  }

  @media only screen and (max-width: $bp-small) {
    margin-bottom: 1rem;
    max-width: 49%;
  }

  &__text {
    margin-bottom: 2rem;
    position: relative;
    z-index: 2;
  }

  &__user {
    align-items: center;
    display: flex;
    justify-content: space-between;
  }

  &__photo {
    border-radius: 50%;
    height: 4.5rem;
    margin-right: 1.5rem;
    width: 4.5rem;
  }

  &__user-box {
    margin-right: auto;
  }

  &__user-name {
    font-size: 1.1rem;
    font-weight: 600;
    margin-bottom: .4rem;
    text-transform: uppercase;
  }

  &__user-date {
    color: var(--color-grey-dark-3);
    font-size: 1rem;
  }

  &__rating {
    color: var(--color-primary);
    font-size: 2.2rem;
    font-weight: 300;
  }

  &::before {
    color: var(--color-grey-light-2);
    content: '\201C';
    font-family: sans-serif;
    font-size: 20rem;
    left: -1rem;
    line-height: 1;
    position: absolute;
    top: -2.75rem;
    z-index: 1;
  }
}

// CALL TO ACTION
.cta {
  padding: 3.5rem 0;
  text-align: center;

  @media only screen and (max-width: $bp-medium) {
    padding: 2rem 0;
  }

  &__book-now {
    font-size: 1.8rem;
    font-weight: 300;
    margin-bottom: 2.5rem;
    text-transform: uppercase;

    @media only screen and (max-width: $bp-medium) {
      margin-bottom: 1rem;
    }

    @media only screen and (max-width: $bp-smallest) {
      font-size: 1.4rem;
    }

    @media only screen and (max-width: $bp-tiny) {
      font-size: 1.2rem;
    }
  }
}
